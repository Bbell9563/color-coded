version: '1.0'
steps:
  BuildingDockerImage:
    title: Building Docker Image
    type: build
    image_name: todaywasawesome/colorcoded
    working_directory: ./
    tag: '${{CF_BRANCH_TAG_NORMALIZED}}-${{CF_SHORT_REVISION}}'
    dockerfile: Dockerfile
  IstioInfo:
    title: Gather istio information
    image: containers101/k8sclitoolset
    commands:
    - kubectl config use-context ${{KUBE_CONTEXT}}
    - istioctl get virtualservices
    - cf_export prodVersion=$(kubectl get deployment -l status=prod -n ${{NAMESPACE}} -o=jsonpath='{$.items[0].metadata.name}')
    - cf_export prodImage=$(kubectl get deployment -l status=prod -n ${{NAMESPACE}} -o=jsonpath='{$.items[0].metadata.labels.version}')
    - cf_export canaryVersion=${{RELEASE}}-${{CF_BRANCH_TAG_NORMALIZED}}-${{CF_SHORT_REVISION}}
    - cf_export canaryImage=${{CF_BRANCH_TAG_NORMALIZED}}-${{CF_SHORT_REVISION}}
  DeployHelm:
    title: Prod with Canary Helm Release
    image: containers101/k8sclitoolset
    commands:
    - bash -e ./deploy/kubernetes/k8s-canary-rollout.sh ${{CF_VOLUME_PATH}}/ ${{prodVersion}} ${{canaryVersion}} 35 k8s 35
    - echo "Marking canary as new prod" && kubectl label deployment ${{canaryVersion}} status=prod
    - echo "Deleting old prod" && kubectl delete deployment ${{prodVersion}}