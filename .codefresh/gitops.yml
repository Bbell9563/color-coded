version: '1.0'
steps:
  BuildingDockerImage:
    title: Building Docker Image
    type: build
    image_name: todaywasawesome/colorcoded
    working_directory: ./
    tag: '${{CF_BRANCH_TAG_NORMALIZED}}-${{CF_SHORT_REVISION}}'
    dockerfile: Dockerfile
  IstioInfo:
    title: Gather istio information
    image: containers101/k8sclitoolset
    commands:
  #   - kubectl config use-context ${{KUBE_CONTEXT}}
  #   - istioctl get virtualservices
  #   - cf_export prodVersion=$(kubectl get service -l status=prod -n ${{NAMESPACE}} -o=jsonpath='{$.items[0].metadata.name}')
  #   - cf_export prodImage=$(kubectl get service -l status=prod -n ${{NAMESPACE}} -o=jsonpath='{$.items[0].metadata.labels.version}')
    - kubectl config use-context ${{KUBE_CONTEXT}}
    - cf_export canaryVersion=${{RELEASE}}-${{CF_BRANCH_TAG_NORMALIZED}}-${{CF_SHORT_REVISION}}
    - cf_export canaryImage=${{CF_BRANCH_TAG_NORMALIZED}}-${{CF_SHORT_REVISION}}
  DeployHelm:
    title: Prod with Canary Helm Release
    image: containers101/k8sclitoolset
    commands:
    - helm upgrade --install ${{RELEASE}} deploy/helm/colors --namespace=${{NAMESPACE}} --debug --set deployment[0].track=release --set deployment[0].image.repository=r.cfcr.io/todaywasawesome/todaywasawesome/colorcoded --set deployment[0].image.tag="${{canaryImage}}" --set deployment[0].image.version="${{canaryVersion}}" --set deployment[0].image.pullSecret="codefresh-generated-r.cfcr.io-cfcr-${{NAMESPACE}}" --set istio.host="gitops.multidemo.codefresh.io"
  # StartCanary:
  #   title: Canary Rollout
  #   image: containers101/k8sclitoolset
  #   commands:
  #     - kubectl config use-context ${{KUBE_CONTEXT}}
  #     - bash -e istio/rollout.sh ${{CF_VOLUME_PATH}}/ ${{prodVersion}} ${{canaryVersion}} 35 ${{CF_KUBECONFIG_PATH}} canary
  # ReleaseProd:
  #   title: Do Final Helm Release
  #   image: containers101/k8sclitoolset
  #   commands:
  #   - kubectl config use-context ${{KUBE_CONTEXT}}
  #   - echo "New Prod is ${{canaryVersion}}, doing final Helm release"
  #   - helm upgrade --install ${{RELEASE}} deploy/helm/colors --namespace=${{NAMESPACE}} --debug --set deployment[0].track=canary --set deployment[0].image.repository=r.cfcr.io/todaywasawesome/todaywasawesome/colorcoded --set deployment[0].image.tag='${{CF_BRANCH_TAG_NORMALIZED}}-${{CF_SHORT_REVISION}}' --set deployment[0].image.version="${{CF_BRANCH_TAG_NORMALIZED}}-${{CF_SHORT_REVISION}}" --set deployment[0].image.pullSecret=codefresh-generated-r.cfcr.io-cfcr-canary
  #   - echo "Marking new release as prod"
  #   - kubectl label svc ${{canaryVersion}} status=prod -n ${{NAMESPACE}}